# docker-compose.yml for AzerothCore.
#
# Start the server with `docker compose up -d --build`
#
# Don't make changes this file! make a `docker-compose.override.yml` and make your
# changes there instead.

version: '3.8'
services:
  ac-database:
    container_name: ac-database
    image: mysql:8.0
    networks:
      - ac-network
    environment:
      - MYSQL_ROOT_PASSWORD=${DOCKER_DB_ROOT_PASSWORD:-password}
    volumes:
      - type: volume
        source: ac-database
        target: /var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 10s
      retries: 40
    labels:
      - "traefik.enable=true"
      
      - "traefik.tcp.routers.db.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.db.entrypoints=db"
      - "traefik.tcp.routers.db.service=svc_db"
      - "traefik.tcp.services.svc_db.loadbalancer.server.port=${DOCKER_DB_EXTERNAL_PORT:-3306}"

  ac-db-import:
    container_name: ac-db-import
    image: acore/ac-wotlk-db-import:${DOCKER_IMAGE_TAG:-master}
    networks:
      - ac-network
    build:
      context: .
      target: db-import
      dockerfile: apps/docker/Dockerfile
    environment:
      AC_DATA_DIR: "/azerothcore/env/dist/data"
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      AC_LOGIN_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_auth"
      AC_WORLD_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_world"
      AC_CHARACTER_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_characters"
    volumes:
      - ${DOCKER_VOL_ETC:-./env/dist/etc}:/azerothcore/env/dist/etc
      # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
      - ${DOCKER_VOL_LOGS:-./env/dist/logs}:/azerothcore/env/dist/logs:delegated
    depends_on:
      ac-database:
        condition: service_healthy

  ac-worldserver:
    container_name: ac-worldserver
    image: acore/ac-wotlk-worldserver:${DOCKER_IMAGE_TAG:-master}
    build:
      context: .
      target: worldserver
      dockerfile: apps/docker/Dockerfile
    networks:
      - ac-network
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file:
        ${DOCKER_AC_ENV_FILE:-conf/dist/env.ac}
    environment:
      AC_DATA_DIR: "/azerothcore/env/dist/data"
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      AC_LOGIN_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_auth"
      AC_WORLD_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_world"
      AC_CHARACTER_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_characters"
    volumes:
      - ${DOCKER_VOL_ETC:-./env/dist/etc}:/azerothcore/env/dist/etc
      # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
      - ${DOCKER_VOL_LOGS:-./env/dist/logs}:/azerothcore/env/dist/logs:delegated
      # client data
      - ${DOCKER_VOL_DATA:-ac-client-data}:/azerothcore/env/dist/data/:ro
      # SQL directory to import for npcbots
      - ${DOCKER_VOL_SQL:-./sql}:/azerothcore/opt/sql
    depends_on:
      ac-database:
        condition: service_healthy
      ac-db-import:
        condition: service_completed_successfully
      ac-client-data-init:
        condition: service_completed_successfully
    labels:
      - "traefik.enable=true"
      
      - "traefik.tcp.routers.world.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.world.entrypoints=world"
      - "traefik.tcp.routers.world.service=svc_world"
      - "traefik.tcp.services.svc_world.loadbalancer.server.port=${DOCKER_WORLD_EXTERNAL_PORT:-8085}"
      
      - "traefik.tcp.routers.soap.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.soap.entrypoints=soap"
      - "traefik.tcp.routers.soap.service=svc_soap"
      - "traefik.tcp.services.svc_soap.loadbalancer.server.port=${DOCKER_SOAP_EXTERNAL_PORT:-7878}"

  ac-authserver:
    container_name: ac-authserver
    image: acore/ac-wotlk-authserver:${DOCKER_IMAGE_TAG:-master}
    build:
      context: .
      target: authserver
      dockerfile: apps/docker/Dockerfile
    networks:
      - ac-network
    tty: true
    restart: unless-stopped
    env_file:
        ${DOCKER_AC_ENV_FILE:-conf/dist/env.ac}
    environment:
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      AC_TEMP_DIR: "/azerothcore/env/dist/temp"
      AC_LOGIN_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_auth"
    volumes:
      - ${DOCKER_VOL_ETC:-./env/dist/etc}:/azerothcore/env/dist/etc
      # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
      - ${DOCKER_VOL_LOGS:-./env/dist/logs}:/azerothcore/env/dist/logs:delegated
    depends_on:
      ac-database:
        condition: service_healthy
      ac-db-import:
        condition: service_completed_successfully
    labels:
      - "traefik.enable=true"
      
      - "traefik.tcp.routers.auth.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.auth.entrypoints=auth"
      - "traefik.tcp.routers.auth.service=svc_auth"
      - "traefik.tcp.services.svc_auth.loadbalancer.server.port=${DOCKER_AUTH_EXTERNAL_PORT:-3724}"

  ac-client-data-init:
    container_name: ac-client-data-init
    image: acore/ac-wotlk-client-data:${DOCKER_IMAGE_TAG:-master}
    user: ${DOCKER_USER:-root}
    build:
      context: .
      target: client-data
      dockerfile: apps/docker/Dockerfile
      args:
        USER_ID: ${DOCKER_USER_ID:-1000}
        GROUP_ID: ${DOCKER_GROUP_ID:-1000}
        DOCKER_USER: ${DOCKER_USER:-acore}
    volumes:
      - ${DOCKER_VOL_CLIENT_DATA:-ac-client-data}:/azerothcore/env/dist/data

  # used for extracting maps from files shipped with game client
  # Most of the time this shouldn't be needed
  ac-tools:
    container_name: ac-tools
    image: acore/ac-wotlk-tools:${DOCKER_IMAGE_TAG:-master}
    user: ${DOCKER_USER:-root}
    build:
      context: .
      target: tools
      dockerfile: apps/docker/Dockerfile
    working_dir: /azerothcore/env/client/
    volumes:
      # this is not the directory of the extracted data! It's the client folder used by the extractors
      - ${DOCKER_AC_CLIENT_FOLDER:-./var/client}:/azerothcore/env/dist/bin/Data
    # Activate with `docker compose --profile tools ...`
    profiles: [tools]

  # Dev server with the ./azerothcore folder binded from the host
  # Please use Linux, WSL2 or any ext-compatible filesystem
  # to avoid performance issues
  #
  # This is primarily intended for use with the "devcontainer" project
  #
  # This is provided primarily for development, though it doesn't receive
  # first-class support
  ac-dev-server:
    tty: true
    image: acore/ac-wotlk-dev-server:${DOCKER_IMAGE_TAG:-master}
    user: ${DOCKER_USER:-root}
    build:
      context: .
      dockerfile: ./apps/docker/Dockerfile.dev-server
      args:
        USER_ID: ${DOCKER_USER_ID:-1000}
        GROUP_ID: ${DOCKER_GROUP_ID:-1000}
        DOCKER_USER: ${DOCKER_USER:-acore}
      target: dev
    env_file:
        ${DOCKER_AC_ENV_FILE:-conf/dist/env.ac}
    environment:
      AC_DATA_DIR: "/azerothcore/env/dist/data"
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      AC_LOGIN_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_auth"
      AC_WORLD_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_world"
      AC_CHARACTER_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_characters"
    ports:
      - ${DOCKER_AUTH_EXTERNAL_PORT:-3724}:3724
      - ${DOCKER_WORLD_EXTERNAL_PORT:-8085}:8085
      - ${DOCKER_SOAP_EXTERNAL_PORT:-7878}:7878
    volumes:
      - ${DOCKER_VOL_ROOT:-.}:/azerothcore:cached
      # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
      - ac-build-dev:/azerothcore/var/build
      - ac-ccache-dev:/azerothcore/var/ccache
      # this is not the directory of the extracted data! It's the client folder used by the extractors
      - ${DOCKER_AC_CLIENT_FOLDER:-./var/client}:/azerothcore/env/dist/bin/Data
    # Activate with `docker compose --profile dev ...`
    profiles: [dev]
    depends_on:
      ac-database:
        condition: service_healthy

  traefik:
    image: traefik
    restart: unless-stopped
    container_name: ac-traefik
    environment:
      TRAEFIK_API_DASHBOARD: false
      TRAEFIK_API_INSECURE: true

      TRAEFIK_ENTRYPOINTS_WORLD: true
      TRAEFIK_ENTRYPOINTS_WORLD_ADDRESS: ":8085/tcp"
      TRAEFIK_ENTRYPOINTS_SOAP: true
      TRAEFIK_ENTRYPOINTS_SOAP_ADDRESS: ":7878/tcp"
      TRAEFIK_ENTRYPOINTS_AUTH: true
      TRAEFIK_ENTRYPOINTS_AUTH_ADDRESS: ":3724/tcp"

      TRAEFIK_PROVIDERS_DOCKER: true
      TRAEFIK_PROVIDERS_DOCKER_WATCH: true
      TRAEFIK_PROVIDERS_DOCKER_NETWORK: "web"
      TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: false

    ports:
      - "${DOCKER_WORLD_EXTERNAL_PORT:-8085}:8085/tcp"
      - "${DOCKER_SOAP_EXTERNAL_PORT:-7878}:7878/tcp"
      - "${DOCKER_AUTH_EXTERNAL_PORT:-3724}:3724/tcp"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - ac-network
      - web

volumes:
  ac-database:
  ac-client-data:
  # Used for dev server
  ac-build-dev:
  ac-ccache-dev:

networks:
  ac-network:
    external: false
  web:
    external: true
